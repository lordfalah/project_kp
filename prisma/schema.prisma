generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model Category {
  id          String     @id @default(cuid())
  createdAt   DateTime   @default(now())
  description String     @db.VarChar(150)
  slug        String     @unique
  Products    Products[]
}

model Products {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  price       Float
  title       String
  description String   @db.VarChar(200)
  catSlug     String
  imageUrls   Json[]
  category    Category @relation(fields: [catSlug], references: [slug])
}

model Order {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  price     Float
  status    String
  userId    String   @unique
  products  Json[]
  user      User     @relation(fields: [userId], references: [id])
}

model History {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  products  Json[]
  price     Float
  status    String
  email     String
  name      String
  image     String
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String?   @default("USER")
  accounts      Account[]
  order         Order?
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
